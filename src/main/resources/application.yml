### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format. 

spring.jmx:
  enabled: false

spring.mvc.format.date: "yyyy-MM-dd"
spring.mvc.format.date-time: "yyyy-MM-dd HH:mm:ss"
spring.mvc.format.time: "HH:mm:ss"

jwt.secret: secret_token
jwt.username: test

spring.datasource:
  driverClassName: com.mysql.cj.jdbc.Driver
  url: jdbc:mysql://mysql_host/restaurant
  username: user_db
  password: password

spring.jpa:
    hibernate.ddl-auto: create-drop

      #spring.datasource:
      #driverClassName: org.h2.Driver
      #url: jdbc:h2:mem:bootrestaurant;MODE=MySQL

server:
  port: 8000
  security:
    enabled: false

#todo: make sure to always enable security in production
security:
  basic:
    enabled: false

#management endpoints on a separate port
management:
  port: 8080
  security:
    enabled: false # management port is internal only. no need to secure it.
    enable-csrf: false

#default project info followed by actual injected pom-specified values.
project:
  name: spring-boot-rest-restaurant
  version: 0.1
  description: boot-restaurant default description

info:
  build:
    artifact: ${project.artifactId}
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}

---
spring:
  profiles: UAT

  security:
    basic:
      enabled: true
      enable-csrf: false

#jpa:
# hibernate:
#   dialect: org.hibernate.dialect.MySQLInnoDBDialect
#   ddl-auto: update

spring.jpa:
    hibernate.ddl-auto: create-drop
  
logging:
  file: boot_restaurant.log
  org.hibernate: INFO

 
